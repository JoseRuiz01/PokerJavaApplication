/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package view;

import java.util.ArrayList;

import model.Baraja;
import model.Carta;
import model.Equity;
import model.Jugador;

/**
 *
 * @author enrique
 */
public class MainFrame extends javax.swing.JFrame {
    
    private ArrayList<JugadorCartasPanel> jugadoresPanels;
    private ArrayList<JugadorOmahaCartasPanel> jugadoresOmahaPanels;
    private CartaMesaPanel cartaMesaPanel = new CartaMesaPanel(new Carta[0]);
    private Baraja baraja = new Baraja();
    private Jugador[] jugadores = null;
    private Carta[] cartasMesa = new Carta[5];

    /**
     * Creates new form MainFrame2
     */
    public MainFrame() {
        jugadoresPanels = new ArrayList<>();
        jugadoresPanels.add(new JugadorCartasPanel(new Jugador(1, baraja.repartirCarta(), baraja.repartirCarta())));
        jugadoresPanels.add(new JugadorCartasPanel(new Jugador(2, baraja.repartirCarta(), baraja.repartirCarta())));
        jugadoresPanels.add(new JugadorCartasPanel(new Jugador(3, baraja.repartirCarta(), baraja.repartirCarta())));
        jugadoresPanels.add(new JugadorCartasPanel(new Jugador(4, baraja.repartirCarta(), baraja.repartirCarta())));
        jugadoresPanels.add(new JugadorCartasPanel(new Jugador(5, baraja.repartirCarta(), baraja.repartirCarta())));
        jugadoresPanels.add(new JugadorCartasPanel(new Jugador(6, baraja.repartirCarta(), baraja.repartirCarta())));
        initComponents();
        getContentPane().repaint();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        controlsPanel = new javax.swing.JPanel();
        playerSeparator = new javax.swing.JSeparator();
        playerLabel = new javax.swing.JLabel();
        playerCardsTextField = new javax.swing.JTextField();
        setPlayerCardsButton = new javax.swing.JButton();
        playerSelectLabel = new javax.swing.JLabel();
        playerSelectComboBox = new javax.swing.JComboBox<>();
        randomizeAllPlayersCardsButton = new javax.swing.JButton();
        randomizePlayerCard = new javax.swing.JButton();
        boardSeparator = new javax.swing.JSeparator();
        boardLabel = new javax.swing.JLabel();
        boardCardsTextField = new javax.swing.JTextField();
        setBoardButton = new javax.swing.JButton();
        cardsonBoardLabel = new javax.swing.JLabel();
        numCardsComboBox = new javax.swing.JComboBox<>();
        randomizeBoardButton = new javax.swing.JButton();
        equitySeparator = new javax.swing.JSeparator();
        calculateLabel = new javax.swing.JLabel();
        calcularEquityIterativelyButton = new javax.swing.JButton();
        calcularEquityRandomlyButton = new javax.swing.JButton();
        resetSeparator = new javax.swing.JSeparator();
        resetLabel = new javax.swing.JLabel();
        resetButton = new javax.swing.JButton();
        gameModeSeparator = new javax.swing.JSeparator();
        gameModeLabel = new javax.swing.JLabel();
        gamemodeComboBox = new javax.swing.JComboBox<>();
        backgroundLabel = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMaximumSize(new java.awt.Dimension(1300, 675));
        setMinimumSize(new java.awt.Dimension(1300, 675));
        setPreferredSize(new java.awt.Dimension(1300, 675));
        setResizable(false);
        setSize(new java.awt.Dimension(1300, 675));
        getContentPane().setLayout(null);

        controlsPanel.setLayout(null);

        playerSeparator.setBackground(new java.awt.Color(0, 51, 255));
        playerSeparator.setForeground(javax.swing.UIManager.getDefaults().getColor("Actions.Green"));
        controlsPanel.add(playerSeparator);
        playerSeparator.setBounds(10, 10, 330, 10);

        playerLabel.setFont(new java.awt.Font("Helvetica Neue", 0, 18)); // NOI18N
        playerLabel.setText("Player Cards:");
        controlsPanel.add(playerLabel);
        playerLabel.setBounds(20, 20, 120, 23);
        controlsPanel.add(playerCardsTextField);
        playerCardsTextField.setBounds(20, 80, 170, 23);

        setPlayerCardsButton.setText("Set cards");
        setPlayerCardsButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                setPlayerCardsButtonActionPerformed(evt);
            }
        });
        controlsPanel.add(setPlayerCardsButton);
        setPlayerCardsButton.setBounds(210, 80, 130, 23);

        playerSelectLabel.setFont(new java.awt.Font("Helvetica Neue", 0, 14)); // NOI18N
        playerSelectLabel.setText("Select Player");
        controlsPanel.add(playerSelectLabel);
        playerSelectLabel.setBounds(20, 50, 180, 18);

        playerSelectComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] {"1", "2", "3", "4", "5", "6" }));
        controlsPanel.add(playerSelectComboBox);
        playerSelectComboBox.setBounds(210, 50, 130, 23);

        randomizeAllPlayersCardsButton.setText("Randomize All Players Cards");
        randomizeAllPlayersCardsButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                randomizeAllPlayersCardsButtonActionPerformed(evt);
            }
        });
        controlsPanel.add(randomizeAllPlayersCardsButton);
        randomizeAllPlayersCardsButton.setBounds(140, 20, 200, 23);

        randomizePlayerCard.setText("Randomize");
        randomizePlayerCard.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                randomizePlayerCardActionPerformed(evt);
            }
        });
        controlsPanel.add(randomizePlayerCard);
        randomizePlayerCard.setBounds(210, 110, 130, 23);

        boardSeparator.setBackground(new java.awt.Color(0, 51, 255));
        boardSeparator.setForeground(javax.swing.UIManager.getDefaults().getColor("Actions.Green"));
        controlsPanel.add(boardSeparator);
        boardSeparator.setBounds(10, 140, 330, 10);

        boardLabel.setFont(new java.awt.Font("Helvetica Neue", 0, 18)); // NOI18N
        boardLabel.setText("Board:");
        controlsPanel.add(boardLabel);
        boardLabel.setBounds(20, 150, 150, 23);
        controlsPanel.add(boardCardsTextField);
        boardCardsTextField.setBounds(20, 180, 170, 23);

        setBoardButton.setText("Set Board");
        setBoardButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                setBoardButtonActionPerformed(evt);
            }
        });
        controlsPanel.add(setBoardButton);
        setBoardButton.setBounds(210, 180, 130, 23);

        cardsonBoardLabel.setFont(new java.awt.Font("Helvetica Neue", 0, 14)); // NOI18N
        cardsonBoardLabel.setText("Number of cards on board:");
        controlsPanel.add(cardsonBoardLabel);
        cardsonBoardLabel.setBounds(20, 210, 180, 18);

        numCardsComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "0", "1", "2", "3", "4", "5" }));
        controlsPanel.add(numCardsComboBox);
        numCardsComboBox.setBounds(210, 210, 130, 23);

        randomizeBoardButton.setText("Randomize");
        randomizeBoardButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                randomizeBoardButtonActionPerformed(evt);
            }
        });
        controlsPanel.add(randomizeBoardButton);
        randomizeBoardButton.setBounds(210, 240, 130, 23);

        equitySeparator.setBackground(new java.awt.Color(0, 51, 255));
        equitySeparator.setForeground(javax.swing.UIManager.getDefaults().getColor("Actions.Green"));
        controlsPanel.add(equitySeparator);
        equitySeparator.setBounds(10, 270, 330, 10);

        calculateLabel.setFont(new java.awt.Font("Helvetica Neue", 0, 18)); // NOI18N
        calculateLabel.setText("Calculate Equity:");
        controlsPanel.add(calculateLabel);
        calculateLabel.setBounds(20, 280, 150, 23);

        calcularEquityIterativelyButton.setText("Iteratively");
        calcularEquityIterativelyButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                calcularEquityIterativelyButtonActionPerformed(evt);
            }
        });
        controlsPanel.add(calcularEquityIterativelyButton);
        calcularEquityIterativelyButton.setBounds(210, 280, 130, 23);

        calcularEquityRandomlyButton.setText("Random Aprox");
        calcularEquityRandomlyButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                calcularEquityRandomlyButtonActionPerformed(evt);
            }
        });
        controlsPanel.add(calcularEquityRandomlyButton);
        calcularEquityRandomlyButton.setBounds(210, 310, 130, 23);

        resetSeparator.setBackground(new java.awt.Color(0, 51, 255));
        resetSeparator.setForeground(javax.swing.UIManager.getDefaults().getColor("Actions.Green"));
        controlsPanel.add(resetSeparator);
        resetSeparator.setBounds(10, 350, 330, 10);

        resetLabel.setFont(new java.awt.Font("Helvetica Neue", 0, 18)); // NOI18N
        resetLabel.setText("Reset all:");
        controlsPanel.add(resetLabel);
        resetLabel.setBounds(20, 360, 110, 23);

        resetButton.setText("Reset All");
        controlsPanel.add(resetButton);
        resetButton.setBounds(210, 360, 130, 23);
        resetButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resetButtonActionPerformed(evt);
            }
        });

        gameModeSeparator.setBackground(new java.awt.Color(0, 51, 255));
        gameModeSeparator.setForeground(javax.swing.UIManager.getDefaults().getColor("Actions.Green"));
        controlsPanel.add(gameModeSeparator);
        gameModeSeparator.setBounds(10, 400, 330, 10);

        gameModeLabel.setFont(new java.awt.Font("Helvetica Neue", 0, 18)); // NOI18N
        gameModeLabel.setText("Game mode:");
        controlsPanel.add(gameModeLabel);
        gameModeLabel.setBounds(20, 410, 110, 23);

        gamemodeComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Texas Hold'em", "Omaha" }));
        controlsPanel.add(gamemodeComboBox);
        gamemodeComboBox.setBounds(210, 410, 130, 23);

        getContentPane().add(controlsPanel);
        controlsPanel.setBounds(950, 0, 350, 650);

        for (JugadorCartasPanel jugadorPanel : jugadoresPanels) {
            getContentPane().add(jugadorPanel);
        }
        
        backgroundLabel.setIcon(new javax.swing.ImageIcon("assets/pokerBack2.png"));
        backgroundLabel.setMaximumSize(new java.awt.Dimension(950, 650));
        backgroundLabel.setMinimumSize(new java.awt.Dimension(950, 650));
        backgroundLabel.setPreferredSize(new java.awt.Dimension(950, 650));
        backgroundLabel.setSize(new java.awt.Dimension(950, 650));
        getContentPane().add(backgroundLabel);
        backgroundLabel.setBounds(0, 0, 950, 650);

        pack();
    }// </editor-fold>                        

    private void setPlayerCardsButtonActionPerformed(java.awt.event.ActionEvent evt) {                                                     
        String[] cartas = playerCardsTextField.getText().split(",");
        int i = playerSelectComboBox.getSelectedIndex();
        jugadoresPanels.get(i).cartasRandom(baraja, new Carta(cartas[0].trim()), new Carta(cartas[1].trim()));
        playerCardsTextField.setText("");
    }                                                    

    private void randomizeAllPlayersCardsButtonActionPerformed(java.awt.event.ActionEvent evt) {                                                               
        baraja.reset();
        for (JugadorCartasPanel jp : jugadoresPanels) {
            jp.cartasRandom(baraja);
        }
    }                                                              

    private void randomizePlayerCardActionPerformed(java.awt.event.ActionEvent evt) {                                                    
        int i = playerSelectComboBox.getSelectedIndex();
        jugadoresPanels.get(i).cartasRandom(baraja);
        
    }                                                   

    private void setBoardButtonActionPerformed(java.awt.event.ActionEvent evt) {                                           
        String[] cartas = boardCardsTextField.getText().split(",");
        cartaMesaPanel.devolverABaraja(baraja);
        int i = numCardsComboBox.getSelectedIndex();
        Carta[] cartasMesa = new Carta[i];
        for(int n=0; n<i;n++)
            cartasMesa[n]=new Carta(cartas[n].trim());
            
        cartaMesaPanel = new CartaMesaPanel(cartasMesa);
        updateFrame();
    }                                              

    private void randomizeBoardButtonActionPerformed(java.awt.event.ActionEvent evt) {  
        cartaMesaPanel.devolverABaraja(baraja);                                                 
        int i = numCardsComboBox.getSelectedIndex();
        cartasMesa = new Carta[i];
        for(int n=0; n<i;n++)
            cartasMesa[n] = CartaMesaPanel.cartaRandom(baraja);
            
        cartaMesaPanel = new CartaMesaPanel(cartasMesa);
        updateFrame();
    }                                                    

    private void calcularEquityIterativelyButtonActionPerformed(java.awt.event.ActionEvent evt) {                                                                
        
        ArrayList<Jugador> jugadores = new ArrayList<Jugador>();

        for (JugadorCartasPanel jcp: jugadoresPanels) {
            Jugador j = jcp.getJugador();
            if (!j.isFolded()) {
                jugadores.add(j);
            }
        }
        Equity.getTotalEquity(baraja, jugadores);
        for (JugadorCartasPanel jcp : jugadoresPanels) {
            jcp.updateEquity();
        }
    }                                                               

    private void calcularEquityRandomlyButtonActionPerformed(java.awt.event.ActionEvent evt) {
        
        ArrayList<Jugador> jugadores = new ArrayList<Jugador>();

        for (JugadorCartasPanel jcp: jugadoresPanels) {
            Jugador j = jcp.getJugador();
            if (!j.isFolded()) {
                jugadores.add(j);
            }
        }

        Equity.getEquityAprox(baraja, jugadores, cartaMesaPanel.getCartas());
        for (JugadorCartasPanel jcp: jugadoresPanels) {
            jcp.updateEquity();
        }
    }

    private void resetButtonActionPerformed(java.awt.event.ActionEvent evt) {                                            
        baraja.reset();
        for (JugadorCartasPanel jp : jugadoresPanels) {
            jp.cartasRandom(baraja);
            jp.reset();
        }
        cartaMesaPanel.devolverABaraja(baraja);
        cartasMesa = new Carta[0]; 
        cartaMesaPanel = new CartaMesaPanel(cartasMesa);
        
        updateFrame();
    }

    private void updateFrame() {
        getContentPane().removeAll();
        getContentPane().add(controlsPanel);
        for (JugadorCartasPanel jugadorPanel : jugadoresPanels) {
            getContentPane().add(jugadorPanel);
        }
        getContentPane().add(cartaMesaPanel);
        getContentPane().add(backgroundLabel);
        getContentPane().repaint();
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify                     
    private javax.swing.JLabel backgroundLabel;
    private javax.swing.JTextField boardCardsTextField;
    private javax.swing.JLabel boardLabel;
    private javax.swing.JSeparator boardSeparator;
    private javax.swing.JButton calcularEquityIterativelyButton;
    private javax.swing.JButton calcularEquityRandomlyButton;
    private javax.swing.JLabel calculateLabel;
    private javax.swing.JLabel cardsonBoardLabel;
    private javax.swing.JPanel controlsPanel;
    private javax.swing.JSeparator equitySeparator;
    private javax.swing.JLabel gameModeLabel;
    private javax.swing.JSeparator gameModeSeparator;
    private javax.swing.JComboBox<String> gamemodeComboBox;
    private javax.swing.JComboBox<String> numCardsComboBox;
    private javax.swing.JTextField playerCardsTextField;
    private javax.swing.JLabel playerLabel;
    private javax.swing.JComboBox<String> playerSelectComboBox;
    private javax.swing.JLabel playerSelectLabel;
    private javax.swing.JSeparator playerSeparator;
    private javax.swing.JButton randomizeAllPlayersCardsButton;
    private javax.swing.JButton randomizeBoardButton;
    private javax.swing.JButton randomizePlayerCard;
    private javax.swing.JButton resetButton;
    private javax.swing.JLabel resetLabel;
    private javax.swing.JSeparator resetSeparator;
    private javax.swing.JButton setBoardButton;
    private javax.swing.JButton setPlayerCardsButton;
    // End of variables declaration                   

   
}
